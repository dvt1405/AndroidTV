// Generated by Dagger (https://dagger.dev).
package com.kt.apps.voiceselector.di;

import com.google.firebase.analytics.FirebaseAnalytics;
import com.kt.apps.core.logging.FirebaseActionLoggerImpl;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("com.kt.apps.voiceselector.di.VoiceSelectorScope")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VoiceSelectorModule_ProvidesAndroidTVLoggerFactory implements Factory<FirebaseActionLoggerImpl> {
  private final VoiceSelectorModule module;

  private final Provider<FirebaseAnalytics> analyticsProvider;

  public VoiceSelectorModule_ProvidesAndroidTVLoggerFactory(VoiceSelectorModule module,
      Provider<FirebaseAnalytics> analyticsProvider) {
    this.module = module;
    this.analyticsProvider = analyticsProvider;
  }

  @Override
  public FirebaseActionLoggerImpl get() {
    return providesAndroidTVLogger(module, analyticsProvider.get());
  }

  public static VoiceSelectorModule_ProvidesAndroidTVLoggerFactory create(
      VoiceSelectorModule module, Provider<FirebaseAnalytics> analyticsProvider) {
    return new VoiceSelectorModule_ProvidesAndroidTVLoggerFactory(module, analyticsProvider);
  }

  public static FirebaseActionLoggerImpl providesAndroidTVLogger(VoiceSelectorModule instance,
      FirebaseAnalytics analytics) {
    return Preconditions.checkNotNullFromProvides(instance.providesAndroidTVLogger(analytics));
  }
}
