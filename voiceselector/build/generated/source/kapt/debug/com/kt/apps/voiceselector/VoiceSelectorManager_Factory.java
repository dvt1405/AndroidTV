// Generated by Dagger (https://dagger.dev).
package com.kt.apps.voiceselector;

import android.content.SharedPreferences;
import com.kt.apps.core.base.CoreApp;
import com.kt.apps.core.logging.FirebaseActionLoggerImpl;
import com.kt.apps.voiceselector.models.VoicePackage;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("com.kt.apps.voiceselector.di.VoiceSelectorScope")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VoiceSelectorManager_Factory implements Factory<VoiceSelectorManager> {
  private final Provider<VoiceSelectorInteractor> interactorProvider;

  private final Provider<VoicePackage> voicePackageProvider;

  private final Provider<CoreApp> appProvider;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  private final Provider<FirebaseActionLoggerImpl> loggerProvider;

  public VoiceSelectorManager_Factory(Provider<VoiceSelectorInteractor> interactorProvider,
      Provider<VoicePackage> voicePackageProvider, Provider<CoreApp> appProvider,
      Provider<SharedPreferences> sharedPreferencesProvider,
      Provider<FirebaseActionLoggerImpl> loggerProvider) {
    this.interactorProvider = interactorProvider;
    this.voicePackageProvider = voicePackageProvider;
    this.appProvider = appProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
    this.loggerProvider = loggerProvider;
  }

  @Override
  public VoiceSelectorManager get() {
    return newInstance(interactorProvider.get(), voicePackageProvider.get(), appProvider.get(), sharedPreferencesProvider.get(), loggerProvider.get());
  }

  public static VoiceSelectorManager_Factory create(
      Provider<VoiceSelectorInteractor> interactorProvider,
      Provider<VoicePackage> voicePackageProvider, Provider<CoreApp> appProvider,
      Provider<SharedPreferences> sharedPreferencesProvider,
      Provider<FirebaseActionLoggerImpl> loggerProvider) {
    return new VoiceSelectorManager_Factory(interactorProvider, voicePackageProvider, appProvider, sharedPreferencesProvider, loggerProvider);
  }

  public static VoiceSelectorManager newInstance(VoiceSelectorInteractor interactor,
      VoicePackage voicePackage, CoreApp app, SharedPreferences sharedPreferences,
      FirebaseActionLoggerImpl logger) {
    return new VoiceSelectorManager(interactor, voicePackage, app, sharedPreferences, logger);
  }
}
